package main

import "fmt"

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

func fib(i int) int {

	if i == 1 {
		return 1
	} else if i == 2 {
		return 2
	} else {
		return fib(i-1) + fib(i-2)
	}
}

func fibChan() chan int {
	fc := make(chan int)

	go func() {
		x1, x2 := 1, 2
		fc <- x1
		fc <- x2

		for {
			x2, x1 = x1+x2, x2
			fc <- x2
		}
	}()
	return fc
}

func p02(limit int) uint64 {
	sum := uint64(0)
	fc := fibChan()

	fib := 0
	for fib < limit {
		if fib%2 == 0 {
			sum += uint64(fib)
		}
		fib = <-fc
	}
	return sum
}

func main() {
	fmt.Println(p02(4000000))
}
